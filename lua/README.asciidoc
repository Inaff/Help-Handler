:toc:
:blank: pass:[ +]

image:https://www.dropbox.com/s/qvtu9z2c4xekaww/f6d766cccecd96c622788a4aa99b438d1ab4abc9faee901949ea14beec23b5ee.png?raw=1[alt="HelpHandler"]




Requirements
------------
##### Lua 5.1.5



Usage
------
The only function needed after importing the HelpHandler.lua module is `HelpHandler.handle(help_dialogue)`. Beyond that, most users will only be concerned with the `version` function and `config` functions (see below) to enable and disable various functionality to avoid output when unwanted. You can refer to the _examples_ folder for more advanced usage.

Copy-paste example:
[source,lua]
----------
require "HelpHandler"


HelpHandler.version("1.0") --This must come before the main HelpHandler.handle function, which is what actually processes arguments
HelpHandler.handle("usage: help dialogue example")
----------
An error will be thrown if an error occurs, and the number of arguments matched will be returned on success (0 if none).


Functions
---------
[source,lua]
----------
HelpHandler.handle(string help_dialogue)
HelpHandler.handleFile(string file_name)
HelpHandler.config(bool no_arg_help (true), bool extra_strings (true), bool match_hyphens (true), bool hyphens_only (false), bool unknown_arg_help (false))
HelpHandler.name(string app_name)
HelpHandler.version(string|number version)
HelpHandler.info(string app_name, string|number version)
----------


Configuration
-------------
The `config` function is used to configure output functionality. To leave the parameter as default, simply pass `nil`. The passable parameters are as follows...
```
no_arg_help         - Print help dialogue when no arguments are given
extra_strings       - Whether to match for h, -h, --h, v, -v and --v specifically (which may conflict with your program’s flags)
match_hyphens       - Match arguments beginning with hyphens (i.e., "help" vs "--help")
hyphens_only        - Only match arguments that begin with one or more hyphens
unknown_arg_help    - Print help dialogue when an unknown argument is passed. You would typically whitelist your program’s option flags in combination with this
```


Contributing
------------
If you'd like to submit a bugfix, I'd be glad to take a pull request or fix it myself given adequate description of the cause of the issue. If you'd like a feature added, it will be  considered so long as it's within the scope of this project.


License
-------
Distributed under the MIT License. See link:https://github.com/TechnicFully/Help-Handler/blob/master/LICENSE[here] for more information.


Contact
------
keaton@keatonsquires.com


