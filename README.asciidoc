:toc:
:blank: pass:[ +]

image:https://www.dropbox.com/s/qvtu9z2c4xekaww/f6d766cccecd96c622788a4aa99b438d1ab4abc9faee901949ea14beec23b5ee.png?raw=1[alt="HelpHandler"]


'''


Raison D'etre
-------------
Having used countless programs from the commandline, the lack of user friendliness has always been frustrating, as well as the amount of boilerplate that would be copy/pasted from other projects to handle the very basic task of telling a user how to use the program, and what version of the program they're using is. I came across various projects for handling arguments, but none for help/version dialogue specifically, let alone in the many various programming languages that one may use. In many popular projects, simply trying to get usage help is a roll of the dice as to what argument works (nano doesn't support "help", openssl and gcc _only_ support "help" and "--help" respectively, etc.), and are case-sensitive which is not user friendly. Even Python's argparse throws "unrecognized arguments" for anything but "--help".

This library isn't meant to be another argument parser, but a one-file library to accomplish the simple task of outputting help dialogue and/or version information to be used with other libraries, in numerous programming languages.
{blank}
{blank}


##### Language minimum versions
- C{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}- C99
- C+\+{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}- C++11
- Java{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}- 7
- Lua{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}{nbsp}- 5.3.5 (Older versions untested)
- Python - 2.7.17 through 3.xx
{blank}

Usage
------
Only one function call is required after importing/including the respective language's Help-Handler file. Most users will only be concerned with the _config()_ function to enable/disable matching of arguments which might conflict with your program (h, -h, --h, v, -v, --v), and _version()_ to pass your program's version.

You can refer to the readme and _examples_ folder in each respective language's folder for basic and more advanced usage, though there are few functions.

##### C
[source,C]
----------
help_handler(argc, argv, "Usage: Test\n"); 
----------
##### C++
[source,CPP]
------------
helpHandler::handle(argc, argv, "Usage: Test\n");
------------
##### Python
[source,python]
---------------
HelpHandler.handle("Usage: Test")
---------------
##### Java
[source,java]
-------------
HelpHandler.handle(args, "Usage: Test");
-------------
##### Lua
[source,lua]
------------
HelpHandler.handle("Usage: Test")
------------


Example
-------
image:https://github.com/Inaff/Help-Handler/blob/master/example.png?raw=true[alt="example terminal screenshot"]


Contributing
------------
If you'd like to submit a bugfix, I'd be glad to take a pull request or fix it myself given adequate description of the cause of the issue. If you'd like a feature added, it will be  considered so long as it's within the scope of this project.


License
-------
Distributed under the MIT License. See link:https://github.com/Inaff/Help-Handler/blob/master/LICENSE[here] for more information.


Contact
------
keatonsquires97@gmail.com


